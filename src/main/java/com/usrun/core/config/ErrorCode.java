package com.usrun.core.config;

import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;

public enum ErrorCode {

  SUCCESS(0),
  FAIL(1),

  LOGOUT_CODE(100),
  MAINTENANCE(101),
  FORCE_UPDATE(102),

  SYSTEM_ERROR(500),

  FIELD_REQUIRED(1000),
  ACCESS_DENT(1001),
  UPDATE_FAIL(1002),
  IMAGE_INVALID(1003),
  OTP_INVALID(1004),
  OTP_EXPIRED(1005),
  OTP_SENT(1006),
  INVALID_PARAM(1007),
  INVALID_IMAGE_SIZE(1008),

  USER_NOT_FOUND(2000),
  USER_CAN_NOT_JOIN(2001),
  USER_JOINED(2002),
  USER_QUIT_FAIL(2003),
  USER_CREATE_FAIL(2004),
  USER_NOT_IN(2005),
  USER_IS_OWNER(2006),
  USER_DOES_NOT_PERMISSION(2007),
  USER_FOLLOW_FAIL(2009),
  FOLLOWER_NOT_FOUND(2010),
  USER_EXISTED(2011),
  USER_IS_CONNECTED(2012),
  USER_CAN_NOT_CONNECT(2013),
  USER_EMAIL_IS_USED(2014),
  OPEN_ID_IS_USED(2015),
  USER_CAN_NOT_DISCONNECT(2016),
  USER_LOGIN_FAIL(2017),
  USER_IS_IN_EVENT(2018),
  USER_RESET_PASSWORD_FAIL(2022),
  USER_EMAIL_NOT_FOUND(2023),
  USER_EMAIL_IS_SOCIAL(2024),
  USER_EMAIL_VERIFIED(2025), // new
  USER_EMAIL_IS_NOT_STUDENT_EMAIL(2026), // new
  USER_OAUTH2_VERIFY_FAILED(2027),
  USER_OAUTH2_TYPE_NOT_SUPPORT(2028),


  TEAM_NOT_FOUND(3000),
  TEAM_USER_NOT_FOUND(3001),
  TEAM_EXISTED(3002),
  TEAM_UPDATE_ROLE_FAILED(3003),
  TEAM_MEMBER_TYPE_NOT_FOUND(3004),

  EVENT_NOT_FOUND(4000),
  EVENT_EVENT_EXIT(4001),
  EVENT_UN_ACTIVE(4002),
  EVENT_CAN_NOT_CREATE(4003),
  EVENT_NOT_EXISTED(4004),
  NOT_TIME_EVENT(4005),
  USER_NOT_JOIN_EVENT(4006),


  ACTIVITY_NOT_FOUND(5000),
  ACTIVITY_ADD_FAIL(5001),
  ACTIVITY_PROCESSING_OR_DUPLICATED(5002),
  ACTIVITY_REQUEST_TIME_INVALID(5003),
  ACTIVITY_SIG_INVALID(5004),

  FUND_NOT_FOUND(6000),

  LEADER_BOARD_NOT_FOUND(7000),
  LEADER_BOARD_CREATE_FAIL(7001),
  LEADER_BOARD_NOT_SUPPORT(7002),
  LEADER_BOARD_ACCESS_DENIED(7003),
  LEADER_BOARD_DELETE_FAIL(7004),

  TRACK_NOT_FOUND(8000),
  TRACK_NOT_BELONG_TO_USER(8001),
  TRACK_TIMEOUT(8002),
  TRACK_SIG_INVALID(8003);

  private int value;
  private static final HashMap<Integer, ErrorCode> returnMap = new HashMap<>();

  static {
    for (ErrorCode errorCode : ErrorCode.values()) {
      returnMap.put(errorCode.value, errorCode);
    }
  }

  ErrorCode(int value) {
    this.value = value;
  }

  public static ErrorCode fromInt(int iValue) {
    return returnMap.get(iValue);
  }

  @JsonValue
  public int toValue() {
    return this.value;
  }
}
