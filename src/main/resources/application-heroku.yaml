spring:
  datasource:
    url: ${DBR_URL}
    username: ${DBR_USERNAME}
    password: ${DBR_USERNAME}
    initialization-mode: ${DBR_INIT}
  data:
    mongodb:
      host: ${DBN_URL}
      port: ${DBN_PORT:27017}
      database: ${DBN_NAME}
      password: ${DBN_USERNAME}
      username: ${DBN_PASSWORD}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: ${DBR_DLL_AUTO}
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    time-zone: UTC
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          starttls:
            enable: true

app:
  auth:
    tokenSecret: ${TOKEN_SECRET}
    tokenExpirationMs: ${TOKEN_EXPIRATION}
  oauth2:
    google:
      clientId: ${GOOGLE_CLIENT_ID}
      clientSecret: ${GOOGLE_CLIENT_SECRET}
      scopes:
        - email
        - profile
  redisUrl: ${REDIS_URL:redis://127.0.0.1:6379}

server:
  port: ${PORT:8080}

amazon:
  endpointUrl: ${AMAZON_S3_ENDPOINT_URL}
  accessKey: ${AMAZON_S3_ACCESS_KEY}
  secretKey: ${AMAZON_S3_SECRET_KEY}
  bucketName: ${AMAZON_BUCKET_NAME}
